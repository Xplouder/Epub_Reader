<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAAAAAA
        AAAAAAAA////AP///wAAAAACAAAADgAAACkkJCRej4+P0a+vr+/CwsL8wsLC/bS0tPKXl5fZPz8/dAAA
        AC0AAAAQAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8AAAAAAQAAAA4AAAA1c3Nzx7e3t/7O087/r8Or/5e3kP+Rs4n/r8Ss/+Hh
        4f/CwsL8goKC0gsLCz4AAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wAAAAAHAgICLImJieTV1tb9o8Kd/3WJLv+Uhx7/oYce/6KH
        Hv+Uhh7/coku/6rGpP/b29v+m5ub7A4ODjMAAAAAAAAAAgAAAAMAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAUAAAAIAAAACQAAABxnZ2e/1tbW/YyxhP+RhB//w4kf/+va
        w//09Pj/9PT4/9ikWf+/iCT/j4Qj/4Krev/b29v+fn5+zAAAAAIAAAAMAAAAGAAAABkAAAATAAAAEQAA
        AA8AAAANAAAACwAAAAoAAAANAAAAEQAAABQAAAAZAAAAHwAAACUAAAApFRUVUZ2dnfywyK7/h4Ih/8eJ
        Iv/PiSP/1p1N//T0+P/t4NL/z483/8uHLP/Chy3/g38q/6/Ir/+xsbH8AAAAAwAAABkAAAA5AAAAQgAA
        ADwAAAA4AAAANAAAADAAAAAsAAAAKwAAADEAAAA4AAAAPgAAAEMAAABHAAAASgAAAE1BQUGq0NDQ/n6c
        av+6kj3/zYgn/8yIKf/LiCv/9PT4/+nZxv/IhzL/x4c0/8aHNv+thDX/bI5Y/9ra2v0AAAAERyBFLmQt
        YXcMBQxcAAAAVgAAAFQAAABSAAAAUAAAAE4AAABNAAAAUAAAAFMAAABXFwoWYUwiSnpzM3CXdDNxnW5h
        buLd3d3/hZRi/9CnaP/RmEz/yYcx/+HFov/09Pj/6dnJ/8WHOv/Ehzz/w4c+/7mFQP9idTv/5eXl/wAA
        AAR0NXJGtVKx/7qHtf+kSpvhokWa3pdBkMSRQY29hDuAqXc1dJuRQIy9n0SY1qlFnu+tRaD/q0Kd/6pG
        nP+sZaL/hHGB/93d3f+Lm3f/07aL/923iP/Upm3/4Mao/+jZyv/exaj/wYdC/8GHRf/Ah0f/sYJH/1xx
        Q//n5+f/AAAABHU1ckavSaT/y8vL/9LI0P+0d6n/qESW/6c9lf+oPpb/qD6W/6c9lf+lO5L/pDmP/6I3
        jP+oVZb/t6i0/6yAo/+Hhob/1dXV/4Sgh//Qxa3/4siq/+LGpf/dvJb/48+6/9Sxjf+/h0r/v4dN/7yF
        T/+Vd0r/XH5g/9zc3P8AAAAEdTVyRq1FoP/U1NT/7e3t/+np6f/X09b/vZi0/65mn/+mSJL/oDWI/6E7
        iv+pXZf/uZmx/8fHx/++vr7/q36g/5+fn/+4uLj/xtHJ/7i+r//g08T/59XC/+jVwv/x7e3/6NnK/9Gs
        h//EmHD/poFb/19pS/+juav/x8bH+wAAAAR1NnJGrUig/9TU1P/x8fH/7e3t/9vY1v/f39//5ubm/97e
        3v/Pz8//ysrK/9HR0f/S0tL/zMzM/7+/v/+rgKH/vb29/5CQkP/k5OT/nLKk/8fKwf/i3NP/6N3T/+rd
        0v/p3ND/5dnN/9vUyf+jqZr/gqCP/+jo6P+bmpv3AAAABHY3c0auSqL/1NTU//Hx8f/n5+f/5L2W/8fG
        xP/j4+P/4eHh/8fEwf/Kwrv/1dXV/9bW1v/Nzc3/v7+//6yBov+/v7//tLS0/7CwsP/q6ur/vMrC/5ir
        nv/Hy8T/29zW/8/Qyf+0u7H/eZKB/6K5rP/w8PD/vby9/21gbKsAAAAEdjd0Rq9MpP/U1NT/8fHx/+bm
        5v/tv5X/27aU/729vf+7u7v/0rKU/9u5mv/S0tL/1tbW/83Nzf+/v7//rYOj/7+/v//MzMz/mJiY/7S0
        tP/p6en/8/Pz/93l3/+fuKr/rcK2/9ji3P//////9vb2/8LCwv+Pgo7/dDZyRwAAAAR2OHRGsU6m/9TU
        1P/x8fH/5+fn/+q/mv//w47/uqWU/7Khk//+w4//2ruf/9LS0v/W1tb/zc3N/7+/v/+uhKX/v7+//83N
        zf/W1tb/wsLC/5KSkv/Hx8f/4+Pj/+3t7f/x8fH/6+vr/9XV1f+VlZX/n5+f/7yTt/92OHRGAAAABHY5
        dEayUaf/1NTU//Hx8f/n5+f/6LyS//6/hP/4vIX/97yG//7Ah//ZuZv/0tLS/9bW1v/Nzc3/v7+//66G
        pv+/v7//zc3N/9bW1v/g4OD/6enp/7+/v/+fn5//mZmZ/5iYmP+goKD/vb29//Hx8f/e3t7/vJS3/3Y5
        dEYAAAAEdzl1RrNTqf/U1NT/8fHx/+fn5//nt4b/+7d0//u4df/8uXb//Ll3/9i1kv/S0tL/1tbW/83N
        zf+/v7//r4in/7+/v//Nzc3/1tbW/+Dg4P/p6en/8PDw//b29v/7+/v////////////8/Pz/8fHx/97e
        3v+8lbj/dzl1RgAAAAR3OnZGtFar/9TU1P/x8fH/5+fn/+aye//5sGP/+bFk//mxZf/5smb/17GJ/9LS
        0v/W1tb/zc3N/7+/v/+wiqj/v7+//83Nzf/W1tb/4ODg/+np6f/w8PD/9vb2//v7+/////////////z8
        /P/x8fH/3t7e/72Wuf93OnZGAAAABHg7dka1WKz/1NTU//Hx8f/n5+f/5bB3//itXP/4rVz/+K1c//it
        XP/WroT/0tLS/9bW1v/Nzc3/v7+//7GLqf+/v7//zc3N/9bW1v/g4OD/6enp//Dw8P/29vb/+/v7////
        /////////Pz8//Hx8f/e3t7/vZe6/3g7dkYAAAAEeDt2RrZarf/U1NT/8fHx/+fn5//lsXn/+K5f//iu
        Xv/4rl7/+K5d/9auhP/S0tL/1tbW/83Nzf+/v7//so2q/7+/v//Nzc3/1tbW/+Dg4P/p6en/8PDw//b2
        9v/7+/v////////////8/Pz/8fHx/97e3v++mLr/eDt2RgAAAAOCQYBBt1yv/9TU1P/x8fH/5+fn/+az
        f//5sWf/+bFm//mxZf/5sWX/17CI/9LS0v/W1tb/zc3N/7+/v/+yjqz/v7+//83Nzf/W1tb/4ODg/+np
        6f/w8PD/9vb2//v7+/////////////z8/P/x8fH/3t7e/76Zu/+CQYBBAAAAAZ9QnTW5XrP/1NTU//Hx
        8f/o6Oj/57aF//q1cP/6tW//+rVu//q0bv/Xso3/0tLS/9bW1v/Nzc3/v7+//7OQrv+/v7//zc3N/9bW
        1v/g4OD/6enp//Dw8P/29vb/+/v7/////////////Pz8//Hx8f/e3t7/v5m8/59QnTW7X7oAt122Lrtf
        uv/S0tL/8PDw/+jo6P/muIv/+7d0//u3dP/7t3T/+7d0/9i0kP/S0tL/1tbW/83Nzf+/v7//tZCy/76+
        vv/Nzc3/1tbW/+Dg4P/p6en/8PDw//b29v/7+/v////////////8/Pz/8fHx/93d3f+/mb//t122Lrxf
        ugC8X7oJvF+6M8S+w8/d3d3/3t7e/+S4i//7tnL/+7Zz//u3c//7t3T/2LSQ/9LS0v/V1dX/ysrK/729
        vf+3pLeMvLm85cjIyP/U1NT/4ODg/+np6f/w8PD/9vb2//v7+//9/f3/+fn5//Dw8P/h4eH/zcvN8cCq
        v4W8X7oJvF+6ALxfugC8X7oAvF+6AMbGxhu6urp64apw6PisW//5rV3/+a5f//muYP/Wr4b/yMjI/8nJ
        yfO/v7+iurq6MLa2tgC6uroJvb29e8fHx+TT09P/3d3d/+Li4v/l5eX/5ubm/+Pj4/zY2NjDy8vLisbG
        xkXDw8MAwcHBAMHBwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALfkDVZ75s7zvWfPv/2oED/9qFC/9qd
        Wbqpqak5wMDACQAAAAAAAAAAtra2ALq6ugC9vb0AwMDAAMLCwjPExMRXxsbGZsjIyDnJyckzysrKA8rK
        ygDJyckAxsbGAMPDwwDBwcEAwcHBAP///wD///8A////AP///wAAAAAAAAAAAAAAAAAAAAAB34olJNuH
        JTzokChr3oonOwAAAAEAAAAAAAAAAP///wC2trYAurq6AL29vQDAwMAAwsLCAMTExADGxsYAyMjIAMnJ
        yQDKysoAysrKAMnJyQDGxsYAw8PDAMHBwQDBwcEA////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A///AAP//gAD//4AAj/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAADwAIAH+APwP/4H
        //////////////////////////////////8=
</value>
  </data>
</root>